# include this to define dimensional varying properties
NONE_CONSTANT <rho_diff> "<rho_d>-<rho_c>"
NONE_CONSTANT <mu_diff> "<mu_d>-<mu_c>"
CELL_LOCAL <vof_rho_c[r=0]> "<vof_phi_lim>*<rho_diff>+<rho_c>" ON <all cells>
CELL_LOCAL <vof_rho_c[r=1]> "<vof_phi[r=1]>*<rho_diff>+<rho_c>" ON <all cells>
#FACE_LOCAL <vof_rho_advection_f[r=1]> "<vof_phi_f_adjusted[r=1]>*<rho_diff>+<rho_c>" ON <all faces> # advection interpolation to use in fluxes calculation
# now making <vof_rho_advection_f[r=1]> dependent on <vof_phi_f[r=1]> instead of adjusted one to remove feedback link between <u_f> and <vof_phi> once newtstepmax's start to take effect
# note, <vof_phi_lim> and <vof_phi_f[r=1]> are both newtstepmaxed, so after a certain number of newtsteps these properties become constant
FACE_LOCAL <vof_rho_advection_f[r=1]> "<vof_phi_f[r=1]>*<rho_diff>+<rho_c>" ON <all faces> # advection interpolation to use in fluxes calculation
FACE_LOCAL <vof_rho_f> "<vof_phi_delta_f>*<rho_diff>+<rho_c>" ON <all faces> # simple interpolation to use in velocity correction calculation
CELL_LOCAL <vof_mu_c> "<vof_phi_lim>*<mu_diff>+<mu_c>" ON <all cells>
FACE_LOCAL <vof_mu_f> "faceave(<vof_mu_c>)" ON <all faces>
FACE_LOCAL <vof_mu_harmonic_f> "faceave[harmonic](<vof_mu_c>)" ON <all faces>
