MARKDOWN
Faxen additional Drag/stress
END_MARKDOWN

REPLACEMENTS D "<<faxen_method>>" W "version2"

#REPLACEMENTS D "<<velocity_species>>" W "species0" # previously, but concerned about stability
REPLACEMENTS D "<<velocity_species>>" W "<<species>>" # now based on own phase species, which should be stable

# all methods now use the laplacian of the fluid velocity field - not anymore!
INCLUDE_TEMPLATE "single_species_laplacian" R "<<species>>" W "<<velocity_species>>"

IF {{ return string_test('<<faxen_method>>','version1') }}

  IF 0 #Mctigue
    CELL_DERIVED <particle_force_alpha4> "7/2*<mu_species0>" ON <domain>
  ELSE #Zhang and Prosperiti (Dalton)
    CELL_DERIVED <particle_force_alpha4> "3/4*<mu_species0>" ON <domain>
  END_IF

# CELL_DERIVED <particle_force_faxen_<<species>>[l=<<i>>]> "-<particle_force_alpha4>*<laplacian_<<velocity_species>>[l=<<i>>]>" ON <domain> output # right sign??
  CELL_DERIVED <particle_force_faxen_<<species>>[l=<<i>>]> "<particle_force_alpha4>*<laplacian_<<velocity_species>>[l=<<i>>]>" ON <domain> output # right sign??

# add on contribution to mu_f_{correction} just for the disperse phase
# actually, fluid phase one should be reduced, but will be small effect and difficult numerically
  VARIABLE <mu_f_correction_<<species>>> "(<mu_f_correction_<<species>>>)+<particle_force_alpha4>"

ELSE_IF {{ return string_test('<<faxen_method>>','version2') }}
# include the influence of hindered settling function etc

  CELL_DERIVED <particle_force_faxen_<<species>>[l=<<i>>]> "<beta^_<<species>>_species0>*(<a_<<species>>>**2)*<laplacian_<<velocity_species>>[l=<<i>>]>/6.d0" ON <domain> output

ELSE_IF {{ return string_test('<<faxen_method>>','version3') }} # this is for version4 equations

  CELL_DERIVED <particle_force_faxen_<<species>>[l=<<i>>]> "(7.d0/4.d0)*<mu_species0>*<laplacian_<<velocity_species>>[l=<<i>>]>" ON <domain> output

END_IF

# finally add these contributions onto extra force
# a positive contribution to the solid species
VARIABLE <extra_force_<<species>>[l=<<i>>]> "<extra_force_<<species>>[l=<<i>>]> + <particle_force_faxen_<<species>>[l=<<i>>]>"
# and an opposite contribution to the fluid species, specific to volume fraction
#VARIABLE <extra_force_species0[l=<<i>>]> "<extra_force_species0[l=<<i>>]> - <particle_force_faxen_<<species>>[l=<<i>>]>*<phi_bounded_<<species>>>/<phi_bounded_species0>"
# as solid species goes to zero, so should effect on fluid
VARIABLE <extra_force_species0[l=<<i>>]> "<extra_force_species0[l=<<i>>]> - <particle_force_faxen_<<species>>[l=<<i>>]>*<phi_pos_<<species>>>/<phi_bounded_species0>"

# output on force
VARIABLE <particle_force_faxen_<<species>>[l=<<i>>]> output
