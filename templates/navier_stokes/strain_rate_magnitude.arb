# here we calculate the 'magnitude of the strain rate tensor', as used for example in generalised non-Newtonian fluids
# for the specific constants and form employed here refer to Bird, Stewart and Lightfoot (2002) p 241, where the strain rate tensor does not have a half multiplier, and the strain rate magnitude is defined as the square root of the second invariant of this strain rate tensor

# the strain rate tensor is calculated from the stress tensor template using a few substitutions
INCLUDE "total_stress" R "<mu_f>" W "(-1.d0)" R "<udiv_f>/3.d0" W "(0.d0)" R "<tau" W "<gamma"

# now calculate the double dot product on the faces, then average to the cells before square rooting
<<cartesiancomment>>CELL_DERIVED <gamma_magnitude> "sqrt(cellmax(0.5d0*cellave(ddot(<gamma[l=:,:]>,<gamma[l=:,:]>)),<tinyish>))" ON <allcells>
# the cylindrical version includes another component based on the radial dimension, which is calculated directly from cell centred variables
<<cylindricalcomment>>CELL_DERIVED <gamma_magnitude> "sqrt(cellmax(0.5d0*cellave(ddot(<gamma[l=:,:]>,<gamma[l=:,:]>)+2.d0*(<u[l=<<radialdim>>]>/<cellx[l=<<radialdim>>]>)**2),<tinyish>))" ON <allcells>

IF <<azimuthal>>
   FACE_DERIVED <gamma_magnitude_f> "sqrt(facemax(0.5d0*ddot(<gamma[l=:,:]>,<gamma[l=:,:]>)+2.d0*faceave(<u[l=<<radialdim>>]>/<cellx[l=<<radialdim>>]>)**2- facegrad[l=<<radialdim>>,reflect=<<radialdim>>](<u[l=<<azimuthaldim>>]>**2/<cellx[l=<<radialdim>>]>),<tinyish>))" ON <allfaces> output
   CELL_DERIVED <gamma_magnitude> "cellave(<gamma_magnitude_f>)" ON <allcells> output

   #CELL_DERIVED <gamma_magnitude> "cellave(sqrt(facemax(0.5d0*ddot(<gamma[l=:,:]>,<gamma[l=:,:]>)+2.d0*faceave(<u[l=<<radialdim>>]>/<cellx[l=<<radialdim>>]>)**2- facegrad[l=<<radialdim>>,reflect=<<radialdim>>](<u[l=<<azimuthaldim>>]>**2/<cellx[l=<<radialdim>>]>),<tinyish>)))" ON <allcells> output

   #CELL_DERIVED <gamma_magnitude> "sqrt(cellmax(0.5d0*cellave(ddot(<gamma[l=:,:]>,<gamma[l=:,:]>)+2.d0*(<u[l=<<radialdim>>]>/<cellx[l=<<radialdim>>]>)**2+ facegrad[l=<<radialdim>>](<u[l=<<azimuthaldim>>]>**2/<cellx[l=<<radialdim>>]>)),<tinyish>))" ON <allcells>
ELSE_IF <<cylindrical>>
   FACE_DERIVED <gamma_magnitude_f> "sqrt(facemax(0.5d0*ddot(<gamma[l=:,:]>,<gamma[l=:,:]>)+2.d0*faceave(<u[l=<<radialdim>>]>/<cellx[l=<<radialdim>>]>)**2,<tinyish>))" ON <allfaces> output
ELSE
   FACE_DERIVED <gamma_magnitude_f> "sqrt(facemax(0.5d0*ddot(<gamma[l=:,:]>,<gamma[l=:,:]>),<tinyish>))" ON <allfaces> output
END_IF
