# root_input.arb file created by the arb script
##################################################################################
# the following external fortran files were found by the arb script and are available for inclusion: src/free_surface_functions.f90
EXTERNALS "src/free_surface_functions.f90"
##################################################################################
# the following working directory files found by the arb script: 1d_fully_developed_flow.arb
#(hash added during unwrap)INCLUDE_WORKING "1d_fully_developed_flow.arb"
#(comment generated during unwrap) not adding new include_path .., as it is already on the top of include_path array = ..
   #(comment generated during unwrap)++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   #(comment generated during unwrap) the following is INCLUDED from /home/daltonh/fortran/arb/testsuite/arb_master/build/../1d_fully_developed_flow.arb without any search/replace combinations
   INFO_TITLE "Fully developed 1d flow between two plates"
   INFO_AUTHOR "Dalton Harvie"
   INFO_DATE "13/2/17"
   
   MSH_FILE "line.msh" # this is a vertical line, parallel with the y [l=2] axis
   #(hash added during unwrap)INCLUDE_TEMPLATE "fluid_properties/water"
   #(comment generated during unwrap) adding new include_path ../templates/fluid_properties, making include_path array = .. ../templates/fluid_properties
      #(comment generated during unwrap)++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      #(comment generated during unwrap) the following is INCLUDED from /home/daltonh/fortran/arb/testsuite/arb_master/build/../templates/fluid_properties/water.arb without any search/replace combinations
      # physical data for water at roughly 20 degreesC
      CONSTANT <mu> [Pa.s] 1.d-3 # viscosity
      CONSTANT <rho> [kg/m^3] 1.d3 # density
      #(comment generated during unwrap) INCLUDE finished for ../templates/fluid_properties/water.arb
      #(comment generated during unwrap)--------------------------------------------------------
   
   CONSTANT <width> "facesum(<facex[l=2]>,region=<top>)-facesum(<facex[l=2]>,region=<bottom>)"
   CONSTANT <half_width> "<width>/2.d0"
   NONE_CONSTANT <dpdx[l=1]> -1.d0 # a negative pressure gradient drives flow in the positive x direction
   NONE_CONSTANT <p_magnitude> "abs(<dpdx[l=1]>)"
   NONE_CONSTANT <u_magnitude> "<half_width>^2*<p_magnitude>/(12.d0*<mu>)" # based on flow of newtonian fluid between two infinite flat plates
   
   CELL_UNKNOWN <u[l=1]> "1.d0" ON <allcells> magnitude=<u_magnitude>
   FACE_DERIVED <ugrad_f[l=2,1]> "facegrad[l=2,](<u[l=1]>)" ON <allfaces>
   
   # to invoke a carreau fluid, set this to the empty string, otherwise for a newtonian fluid set this to "#"
   #(hash added during unwrap)GENERAL_REPLACEMENTS R "<<carreaucomment>>" W ""
   INFO_TITLE+ ": Carreau shear-thinning fluid"
   
   # calculate the average strain rate using templates files
   #(hash added during unwrap)INCLUDE_TEMPLATE "navier_stokes/strain_rate_magnitude"
   #(comment generated during unwrap) adding new include_path ../templates/navier_stokes, making include_path array = .. ../templates/fluid_properties ../templates/navier_stokes
      #(comment generated during unwrap)++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      #(comment generated during unwrap) the following is INCLUDED from /home/daltonh/fortran/arb/testsuite/arb_master/build/../templates/navier_stokes/strain_rate_magnitude.arb without any search/replace combinations
      # here we calculate the 'magnitude of the strain rate tensor', as used for example in generalised non-Newtonian fluids
      # for the specific constants and form employed here refer to Bird, Stewart and Lightfoot (2002) p 241, where the strain rate tensor does not have a half multiplier, and the strain rate magnitude is defined as the square root of the second invariant of this strain rate tensor
      
      # the strain rate tensor is calculated from the stress tensor template using a few substitutions
      #(hash added during unwrap)INCLUDE "total_stress" R "<mu_f>" W "(-1.d0)" R "<udiv_f>/3.d0" W "(0.d0)" R "<tau" W "<gamma"
      #(comment generated during unwrap) not adding new include_path ../templates/navier_stokes, as it is already on the top of include_path array = ../templates/navier_stokes
         #(comment generated during unwrap)++++++++++++++++++++++++++++++++++++++++++++++++++++++++
         #(comment generated during unwrap) the following is INCLUDED from /home/daltonh/fortran/arb/testsuite/arb_master/build/../templates/navier_stokes/total_stress.arb with the following search/replace combinations: replace <mu_f> with (-1.d0): replace <udiv_f>/3.d0 with (0.d0): replace <tau with <gamma
         # total stress tensor
         #(hash added during unwrap)INCLUDE "u_gradient_tensor"
         #(comment generated during unwrap) not adding new include_path ../templates/navier_stokes, as it is already on the top of include_path array = ../templates/navier_stokes
            #(comment generated during unwrap)++++++++++++++++++++++++++++++++++++++++++++++++++++++++
            #(comment generated during unwrap) the following is INCLUDED from /home/daltonh/fortran/arb/testsuite/arb_master/build/../templates/navier_stokes/u_gradient_tensor.arb without any search/replace combinations
            # a tensor of face centred gradients that respects any reflections
            # used in the total stress and boundary conditions now
            # as per conventional tensor notation, the first index is the derivative direction, and the second is the velocity direction
                           FACE_DERIVED <ugrad_f[l=1,1]> "facegrad[l=1,](<u[l=1]>)" ON <allfaces>
            FACE_DERIVED <ugrad_f[l=1,2]> "facegrad[l=1,](<u[l=2]>)" ON <allfaces>
            FACE_DERIVED <ugrad_f[l=1,3]> "facegrad[l=1,](<u[l=3]>)" ON <allfaces>
            FACE_DERIVED <ugrad_f[l=2,1]> "facegrad[l=2,](<u[l=1]>)" ON <allfaces>
                           FACE_DERIVED <ugrad_f[l=2,2]> "facegrad[l=2,](<u[l=2]>)" ON <allfaces>
            FACE_DERIVED <ugrad_f[l=2,3]> "facegrad[l=2,](<u[l=3]>)" ON <allfaces>
            FACE_DERIVED <ugrad_f[l=3,1]> "facegrad[l=3,](<u[l=1]>)" ON <allfaces>
            FACE_DERIVED <ugrad_f[l=3,2]> "facegrad[l=3,](<u[l=2]>)" ON <allfaces>
                           FACE_DERIVED <ugrad_f[l=3,3]> "facegrad[l=3,](<u[l=3]>)" ON <allfaces>
            #(comment generated during unwrap) INCLUDE finished for ../templates/navier_stokes/u_gradient_tensor.arb
            #(comment generated during unwrap)--------------------------------------------------------
         
         # if the numerical velocity divergence is to be included in the stress calculation replace this string with an empty character prior to calling this template
         #(hash added during unwrap)GENERAL_REPLACEMENTS DEFAULT "<<udivfcomment>>" W "#"
         # calculate the velocity divergence (numerical) on each face
         #FACE_DERIVED <udiv_f> "<ugrad_f[l=1,1]>+<ugrad_f[l=2,2]>+<ugrad_f[l=3,3]>" ON <allfaces>
         
         # no both cartesian and cylindrical stresses don't include pressure
         # without the numerical velocity divergence
         FACE_LOCAL <gamma[l=1,1]> "-(-1.d0)*2.d0*<ugrad_f[l=1,1]>" ON <allfaces>
         FACE_LOCAL <gamma[l=2,2]> "-(-1.d0)*2.d0*<ugrad_f[l=2,2]>" ON <allfaces>
         FACE_LOCAL <gamma[l=3,3]> "-(-1.d0)*2.d0*<ugrad_f[l=3,3]>" ON <allfaces>
         # overwrite theses if the numerical velocity divergence is to be included, see # string replacement above
         # Note: "(0.d0)" is specifically replaced in strain_rate_magnitude template
         #FACE_LOCAL <gamma[l=1,1]> "-(-1.d0)*2.d0*(<ugrad_f[l=1,1]>-(0.d0))" ON <allfaces>
         #FACE_LOCAL <gamma[l=2,2]> "-(-1.d0)*2.d0*(<ugrad_f[l=2,2]>-(0.d0))" ON <allfaces>
         #FACE_LOCAL <gamma[l=3,3]> "-(-1.d0)*2.d0*(<ugrad_f[l=3,3]>-(0.d0))" ON <allfaces>
         FACE_LOCAL <gamma[l=1,2]> "-(-1.d0)*(<ugrad_f[l=1,2]>+<ugrad_f[l=2,1]>)" ON <allfaces>
         FACE_LOCAL <gamma[l=1,3]> "-(-1.d0)*(<ugrad_f[l=1,3]>+<ugrad_f[l=3,1]>)" ON <allfaces>
         FACE_LOCAL <gamma[l=2,3]> "-(-1.d0)*(<ugrad_f[l=2,3]>+<ugrad_f[l=3,2]>)" ON <allfaces>
         FACE_LOCAL <gamma[l=2,1]> "<gamma[l=1,2]>" ON <allfaces>
         FACE_LOCAL <gamma[l=3,1]> "<gamma[l=1,3]>" ON <allfaces>
         FACE_LOCAL <gamma[l=3,2]> "<gamma[l=2,3]>" ON <allfaces>
         #(comment generated during unwrap) INCLUDE finished for ../templates/navier_stokes/total_stress.arb
         #(comment generated during unwrap)--------------------------------------------------------
      
      # now calculate the double dot product on the faces, then average to the cells before square rooting
      CELL_DERIVED <gamma_magnitude> "sqrt(0.5d0*cellave(ddot(<gamma[l=:,:]>,<gamma[l=:,:]>)))" ON <allcells>
      # the cylindrical version includes another component based on the radial dimension, which is calculated directly from cell centred variables
      #CELL_DERIVED <gamma_magnitude> "sqrt(0.5d0*cellave(ddot(<gamma[l=:,:]>,<gamma[l=:,:]>))+2.d0*(<u[l=0]>/<cellx[l=0]>)**2)" ON <allcells>
      #(comment generated during unwrap) INCLUDE finished for ../templates/navier_stokes/strain_rate_magnitude.arb
      #(comment generated during unwrap)--------------------------------------------------------
   VARIABLE <gamma_magnitude> output
   FACE_DERIVED <gamma_magnitude_f> "sqrt(0.5d0*ddot(<gamma[l=:,:]>,<gamma[l=:,:]>))" ON <allfaces> output
   NONE_CONSTANT <mu_f> "<mu>" # will be overwritten for a carreau fluid
   
   # parameters for the carreau shear-thinning viscosity
   NONE_CONSTANT <carreau_relative_mu_infinity> 1.d-3
   NONE_CONSTANT <carreau_mu_infinity> [Pa.s] "<mu>*<carreau_relative_mu_infinity>" # set infinite shear-rate viscosity as a proportion of the zero-shear rate viscosity
   NONE_CONSTANT <carreau_lambda> [s] 1.d0 # time constant
   NONE_CONSTANT <carreau_n> 0.5d0 # power-law constant
   FACE_DERIVED <mu_f> "(1.d0+(<carreau_lambda>*<gamma_magnitude_f>)^2)^((<carreau_n>-1.d0)/2.d0)*(<mu>-<carreau_mu_infinity>) + <carreau_mu_infinity>" ON <allfaces> output
   NONE_CONSTANT <u_magnitude> "<u_magnitude>*<mu>/<carreau_mu_infinity>" # 
   
   FACE_LOCAL <tau[l=1,2]> "-<mu_f>*<ugrad_f[l=2,1]>" ON <allfaces>
   FACE_LOCAL <tau[l=2,1]> "<tau[l=1,2]>" ON <allfaces>
   FACE_DERIVED <J_f[l=1]> "dot(<facenorm[l=:]>,<tau[l=:,1]>)" ON <allfaces>
   CELL_EQUATION <momentum[l=1]> "celldiv(<J_f[l=1]>)+<dpdx[l=1]>" ON <domain> # momentum component
   FACE_EQUATION <u_topwall> "<u[l=1]>" ON <top>
   FACE_EQUATION <u_bottomwall> "<u[l=1]>" ON <bottom>
   
   NEWTSTEPMAX 50
   #INCLUDE_TEMPLATE "kernel_presets/kernel_1st_order_compact"
   #(comment generated during unwrap) INCLUDE finished for ../1d_fully_developed_flow.arb
   #(comment generated during unwrap)--------------------------------------------------------
##################################################################################
