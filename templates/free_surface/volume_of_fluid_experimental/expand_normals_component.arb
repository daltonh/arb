# here we expand the normals by averaging the components

INCLUDE "normals_unit"

# the size of this expansion is really dependent on the size of the kernel used to calculate <vof_kappa_f>, although, as long as this minimum size is satisfied, could also be additionally increased to decrease erroneous current magnitude (although I favour working on <vof_phi_delta> instead)
GENERAL_REPLACEMENTS R "<<maxseparation>>" W "3,faceseparation"

# weight using delta mask and mag
<<dim1comment>>INCLUDE "convolve_variable_dynamic" R "<vof_variable_default>" W "0.d0" R "<vof_variable_convolve_constant>" W "<vof_phigrad_expand_constant>" R "<vof_variable>" W "<vof_phigrad_unit[l=1]>" R "<vof_variable_convolve>" W "<vof_phigrad_expand[l=1]>" R "<vof_variable_mask>" W "<vof_delta_mask>" R "<vof_variable_convolve" W "<vof_phigrad_expand" R "<vof_variable" W "<vof_phigrad" R "<<reflect>>" W "1"
<<dim1comment>>CELL_DERIVED <vof_phigrad_expand[l=1]> "cellif(<vof_phigrad_expand_mask>,cellsum[maxseparation=<<maxseparation>>,reflect=1](cellif(<vof_delta_mask>,<vof_phigrad_unit[l=1]>*<vof_phigrad_expand_kernel>*<vof_phigrad_expand_weight>,0.d0),region=<all cells>)/<vof_phigrad_expand_denominator>,0.d0)" ON <all cells> output
<<dim2comment>>INCLUDE "convolve_variable_dynamic" R "<vof_variable_default>" W "0.d0" R "<vof_variable_convolve_constant>" W "<vof_phigrad_expand_constant>" R "<vof_variable>" W "<vof_phigrad_unit[l=2]>" R "<vof_variable_convolve>" W "<vof_phigrad_expand[l=2]>" R "<vof_variable_mask>" W "<vof_delta_mask>" R "<vof_variable_convolve" W "<vof_phigrad_expand" R "<vof_variable" W "<vof_phigrad" R "<<reflect>>" W "2"
<<dim2comment>>CELL_DERIVED <vof_phigrad_expand[l=2]> "cellif(<vof_phigrad_expand_mask>,cellsum[maxseparation=<<maxseparation>>,reflect=2](cellif(<vof_delta_mask>,<vof_phigrad_unit[l=2]>*<vof_phigrad_expand_kernel>*<vof_phigrad_expand_weight>,0.d0),region=<all cells>)/<vof_phigrad_expand_denominator>,0.d0)" ON <all cells> output
<<dim3comment>>INCLUDE "convolve_variable_dynamic" R "<vof_variable_default>" W "0.d0" R "<vof_variable_convolve_constant>" W "<vof_phigrad_expand_constant>" R "<vof_variable>" W "<vof_phigrad_unit[l=3]>" R "<vof_variable_convolve>" W "<vof_phigrad_expand[l=3]>" R "<vof_variable_mask>" W "<vof_delta_mask>" R "<vof_variable_convolve" W "<vof_phigrad_expand" R "<vof_variable" W "<vof_phigrad" R "<<reflect>>" W "3"
<<dim3comment>>CELL_DERIVED <vof_phigrad_expand[l=3]> "cellif(<vof_phigrad_expand_mask>,cellsum[maxseparation=<<maxseparation>>,reflect=3](cellif(<vof_delta_mask>,<vof_phigrad_unit[l=3]>*<vof_phigrad_expand_kernel>*<vof_phigrad_expand_weight>,0.d0),region=<all cells>)/<vof_phigrad_expand_denominator>,0.d0)" ON <all cells> output
CELL_LOCAL <vof_phigrad_expand_weight> "<vof_delta_mag>"
NONE_CONSTANT <vof_phigrad_expand_constant> 2.0d0

CELL_DERIVED <vof_phigrad_expand_mag> "sqrt(dot(<vof_phigrad_expand[l=:]>,<vof_phigrad_expand[l=:]>))" ON <all cells>
# finally define some unit vectors from these
<<dim1comment>>CELL_DERIVED <vof_phigrad_expand_unit[l=1]> "cellif(<vof_phigrad_expand_mask>,<vof_phigrad_expand[l=1]>/<vof_phigrad_expand_mag>,0.d0)" ON <all cells> output
<<dim2comment>>CELL_DERIVED <vof_phigrad_expand_unit[l=2]> "cellif(<vof_phigrad_expand_mask>,<vof_phigrad_expand[l=2]>/<vof_phigrad_expand_mag>,0.d0)" ON <all cells>
<<dim3comment>>CELL_DERIVED <vof_phigrad_expand_unit[l=3]> "cellif(<vof_phigrad_expand_mask>,<vof_phigrad_expand[l=3]>/<vof_phigrad_expand_mag>,0.d0)" ON <all cells>
