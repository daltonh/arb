# root_input.arb file created by the arb script
##################################################################################
# the following external fortran files were found by the arb script and are available for inclusion: src/free_surface_functions.f90
EXTERNALS "src/free_surface_functions.f90"
##################################################################################
# the following working directory files found by the arb script: laplacian_in_square.arb
#(hash added during unwrap)INCLUDE_WORKING "laplacian_in_square.arb"
   #++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   # the following is INCLUDED from ../laplacian_in_square.arb without any search/replace combinations
   # arb finite volume solver
   # Copyright 2009,2010 Dalton Harvie (daltonh@unimelb.edu.au)
   #
   # arb is released under the GNU GPL.  For full details see the license directory.
   #
   #----------------------------------------------------------------------------
   # file equations.in
   VERSION 0.40
   #----------------------------------------------------------------------------
   
   #-------------------------------------------------------------------
   # geometry
   
   # CELL_REGION/FACE_REGION specified by: <name> "location string" # comments
   # where location string could be: "AT x1 x2 x3" for a single point closest to these coordinates
   # where location string could be: "WITHIN BOX x1_min x2_min x3_min x1_max x2_max x3_max" for all elements within a box defined by the minimum and maximum coordinate values
   # where location string could be: "COMPOUND +<a region>-<another region>" for a + and - compound region list
   # where location string could be: "BOUNDARY OF <a region>" - boundary faces/cells contained within or surrounding <a region>
   # where location string could be: "DOMAIN OF <a region>" - domain faces/cells contained within <a region>
   # where location string could be: "ASSOCIATED WITH <a region>" - faces/cells both contained within and surrounding <a region>
   FACE_REGION <walls> "COMPOUND +<boundaries>-<top>"
   
   # MSH_FILE instructs arb to read or write a gmsh file (location is read location - write location will always be within the output directory)
   # output options are: output,centringoutput,meshoutput,centringmeshoutput,nooutput
   # input options are: input,centringinput,meshinput,centringmeshinput,noinput
   # data output format options for CELL centred data (which overwrite individual variable options if specified): elementdata,elementnodedata,elementnodelimiteddata
   MSH_FILE "surface.msh"
   
   CELL_UNKNOWN <phi> [] "1.d0" # unknown variable
   CELL_DERIVED <lambda> "2*<pi>**2*(<cellx[l=2]>-2.d0*<phi>)" ON <domain> # derived function
   CELL_EQUATION <poisson phi> "celldiv(facegrad(<phi>))-<lambda>" ON <domain> # poisson equation
   FACE_EQUATION <phi top> "<phi>-0.5d0*( 1 - cos(2*<pi>*<cellx[l=1]>) )" ON <top> # specified phi profile along top of box
   FACE_EQUATION <phi walls> "<phi>-0.0d0" ON <walls> # set phi to zero on the other walls
   NONE_OUTPUT <phi average> "cellsum(<phi>*<cellvol>,<domain>)/cellsum(<cellvol>,<domain>)" # average phi over entire domain
   CELL_OUTPUT <phi analytical> "0.5d0*( 1 - cos(2*<pi>*<cellx[l=1]>) )*<cellx[l=2]>" ON <all cells> # analytical solution obtained by separation of variables
   CELL_OUTPUT <phi difference> "abs(<phi>-<phi analytical>)" ON <all cells> # difference between analytical and numerical solution
   NONE_OUTPUT <linfty norm> "cellmax(abs(<phi>-<phi analytical>),,<domain>)" # infinity norm
   NONE_OUTPUT <l1 norm> "cellsum(abs(<phi>-<phi analytical>),<domain>)/cellsum(1,<domain>)" # L1 norm
   NONE_OUTPUT <l2 norm> "sqrt(cellsum((<phi>-<phi analytical>)**2,<domain>)/cellsum(1,<domain>))" # L2 norm
   
   #-------------------------------------------------------------------
   # INCLUDE FINISHED for ../laplacian_in_square.arb
   #--------------------------------------------------------
##################################################################################
