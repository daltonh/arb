#!/bin/bash
# little script that automates getting arb from git
# updated with more options 2/3/15
# will be cloned into directory named arb_branch by default
# assumes that ssh keys have been setup, otherwise use http transport
# suggest putting this somewhere in your PATH
#-------------------------------------------------------------------------------
user="daltonh";
branch="master";
server="vof.chemeng.unimelb.edu.au";
directory="";
local_directory="/Users/daltonh/codes/arb/development/current";
port="8000";
transport="ssh"; # default transport is ssh, but others are http and local
#-------------------------------------------------------------------------------
# usage function
usage () {
  echo "This script gets an arb version from a git server";
  echo "HELP/USAGE: ./getarb [-b branch] [-u user] [-s server] [-d directory] [-h]";
  echo
  echo "Possible options:";
  echo "  -b|--branch: branch to get (default = $branch)";
  echo "  -d|--directory: output directory name to use (default = arb_$branch)";
  echo "  -u|--user: user name that hosts arb project (default = $user)";
  echo "  -p|--port: port number of git server for http requests (default = $port)";
  echo "  --server: server name to use, only for ssh (default = $server)";
  echo "  -h|--http: use http transport from git rather than ssh";
  echo "  -s|--ssh: use ssh transport from git rather than http (default)";
  echo "  -l|--local: clone from local directory: $local_directory";
  echo "  --local-directory: local directory name to use, only for local (default = $local_directory)";
  echo "  -h|--help: display this HELP INFO";
  echo;
  exit 1;
}
#-------------------------------------------------------------------------------
# better case implementation from http://www.linuxtopia.org/online_books/advanced_bash_scripting_guide/testbranch.html
while [ $# -gt 0 ]; do
  case "$1" in
    "-b"|"--branch") if [ ! -n "$2" ]; then echo "ERROR: branch not found"; usage; fi; branch=$2; shift;;
    "-u"|"--user") if [ ! -n "$2" ]; then echo "ERROR: user not found"; usage; fi; user=$2; shift;;
    "--server") if [ ! -n "$2" ]; then echo "ERROR: server not found"; usage; fi; server=$2; shift;;
    "--local-directory") if [ ! -n "$2" ]; then echo "ERROR: local-directory not found"; usage; fi; local_directory=$2; shift;;
    "-d"|"--directory") if [ ! -n "$2" ]; then echo "ERROR: directory not found"; usage; fi; directory=$2; shift;;
    "-p"|"--port") if [ ! -n "$2" ]; then echo "ERROR: port not found"; usage; fi; port=$2; shift;;
    "-h"|"--http") transport="http";;
    "-s"|"--ssh") transport="ssh";;
    "-l"|"--local") transport="local";;
    "-h"|"--help") usage;;
    "--"*|"-"*) echo "ERROR: unknown option $i passed to getarb"; usage;;
    *) echo "ERROR: unknown command line entry $i"; usage;;
  esac
  shift
done

if [ "${directory}" = "" ]; then directory="arb_$branch"; echo "setting output directory based on branch to $directory"; fi;

if [ $transport == "ssh" ] ; then
  echo "performing: git clone -b $branch git@$server:daltonh/arb.git $directory";
  git clone -b $branch git@$server:$user/arb.git $directory;
elif [ $transport == "http" ] ; then
  echo "performing: git clone -b $branch http://$server:$port/daltonh/arb.git $directory";
  git clone -b $branch http://$server:$port/$user/arb.git $directory;
else
  echo "performing: git clone -b $branch $local_directory $directory";
  git clone -b $branch $local_directory $directory;
fi
