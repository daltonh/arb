# Reconstructed list of the variables in arb format:
#--------------------------------------------------------------------------------
# constant variables:
CELL_CONSTANT <u[l=1]> [1] "1.d0" ON <allcells> # other information: region = <allcells>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
CELL_CONSTANT <u[l=2]> [1] "1.d0" ON <allcells> # other information: region = <allcells>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
FACE_CONSTANT <u_f> [1] "( + (<u[l=1]>)*(<facenorm[l=1]>) + (<u[l=2]>)*(<facenorm[l=2]>) + (<u[l=3]>)*(<facenorm[l=3]>) )" ON <allfaces> # other information: region = <allfaces>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
CELL_CONSTANT <x_phi> [1] "<cellx[l=1]>-<cellx[l=2]>" ON <allcells> # other information: region = <allcells>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
CELL_CONSTANT <foo_theory> [1] "cellif(abs(<x_phi>)-0.25d0,0.d0,1.d0)" ON <allcells> # other information: region = <allcells>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
NONE_CONSTANT <foo_upper_bound> [1] "numerical constant rather than an equation" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/absolute_limiter.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/absolute_limiter.arb: comments = empty
NONE_CONSTANT <foo_lower_bound> [1] "numerical constant rather than an equation" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/absolute_limiter.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/absolute_limiter.arb: comments = empty
NONE_CONSTANT <foo_limiter_crosskernel_max> [1] "numerical constant rather than an equation" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/kernel_limiter.arb ../../templates/advection_limiters/implicit/default_parameters.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/kernel_limiter.arb /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/default_parameters.arb: comments = # the maximum multiplier for any cell value that is not the central cell # the maximum multiplier for any cell value that is not the central cell
NONE_CONSTANT <foo_limiter_centralkernel_max> [1] "numerical constant rather than an equation" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/kernel_limiter.arb ../../templates/advection_limiters/implicit/default_parameters.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/kernel_limiter.arb /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/default_parameters.arb: comments = # the maximum multiplier for the central cell value # the maximum multiplier for the central cell value
CELL_CONSTANT <foo_limiter_kernel> [1] "cellmin(<foo_limiter_crosskernel>,<foo_limiter_centralkernel>)" ON <allcells> # other information: region = <allcells>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/kernel_limiter.arb advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/kernel_limiter.arb /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments =  
NONE_CONSTANT <foo_magnitude> [1] "cellmax(abs(<foo>),region=<allcells>)" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/limiter.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/limiter.arb: comments = empty
NONE_CONSTANT <foo_eps> [1] "<foo_magnitude>*1.d-20" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/limiter.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/limiter.arb: comments = # a small phi value, used to guard against divide by zero
NONE_CONSTANT <foo_a> [1] "numerical constant rather than an equation" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/limiter.arb ../../templates/advection_limiters/implicit/default_parameters.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/limiter.arb /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/default_parameters.arb: comments = # determines the gradient of the limiter # determines the gradient of the limiter
NONE_CONSTANT <foo_b> [1] "numerical constant rather than an equation" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/limiter.arb ../../templates/advection_limiters/implicit/default_parameters.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/limiter.arb /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/default_parameters.arb: comments = # between 0 and 1.  Less than 0.5 is probably required for any guarantee of diagonal dominance.  At b=0 all gradients will be limited to some extent.  If b=1 then only gradients that are absolutely going to cause under/overshoots will be limited (but the resulting Jacobian is unlikely to be diagonally dominant for a pure advection problem) # between 0 and 1.  Less than 0.5 is probably required for any guarantee of diagonal dominance.  At b=0 all gradients will be limited to some extent.  If b=1 then only gradients that are absolutely going to cause under/overshoots will be limited (but the resulting Jacobian is unlikely to be diagonally dominant for a pure advection problem)
#--------------------------------------------------------------------------------
# transient variables:
#--------------------------------------------------------------------------------
# newtient variables:
#--------------------------------------------------------------------------------
# unknown variables:
CELL_UNKNOWN <foo> [1] "1.d+0" ON <allcells> # other information: region = <allcells>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
#--------------------------------------------------------------------------------
# derived variables:
CELL_DERIVED <foo_limiter_grad[l=1]> [1] "cellgrad[l=1](<foo>)*<foo_limiter_kernel>" ON <allcells> # other information: region = <allcells>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/limiter_gradients.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/limiter_gradients.arb: comments = empty
CELL_DERIVED <foo_limiter_grad[l=2]> [1] "cellgrad[l=2](<foo>)*<foo_limiter_kernel>" ON <allcells> # other information: region = <allcells>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/limiter_gradients.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/limiter_gradients.arb: comments = empty
CELL_DERIVED <foo_limiter_grad[l=3]> [1] "cellgrad[l=3](<foo>)*<foo_limiter_kernel>" ON <allcells> # other information: region = <allcells>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/limiter_gradients.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/limiter_gradients.arb: comments = empty
CELL_DERIVED <foo_betar> [1] "<foo_diff_bounded>/(<foo_deltac>+<foo_eps>)" ON <domain> # other information: region = <domain>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/limiter.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/limiter.arb: comments = empty
CELL_DERIVED <foo_limiter> [1] "cellif(celldelta(<domain>),<foo_limiter_domain>,0.d0)" ON <allcells> # other information: region = <allcells>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/limiter.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/limiter.arb: comments = empty
FACE_DERIVED <foo_f> [1] "faceave[advection](<foo>,<u_f>,<foo_limiter>,gradient[l=1]=<foo_limiter_grad[l=1]>,gradient[l=2]=<foo_limiter_grad[l=2]>)" ON <allfaces> # other information: region = <allfaces>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
#--------------------------------------------------------------------------------
# equation variables:
FACE_EQUATION <foo_inlet> [1] "<foo>-<foo_theory>" ON <inlet> # other information: region = <inlet>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
FACE_EQUATION <foo_outlet> [1] "<foo>-faceave[downcell](<foo>)" ON <outlet> # other information: region = <outlet>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = # upwinding of phi value on boundary
CELL_EQUATION <foo_advection> [1] "celldiv(<foo_f>*<u_f>)" ON <domain> # other information: region = <domain>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
#--------------------------------------------------------------------------------
# output variables:
CELL_OUTPUT <foo_error> [1] "<foo>-<foo_theory>" ON <allcells> # other information: region = <allcells>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
NONE_OUTPUT <foo_error_rms_ave> [1] "sqrt(cellsum(<foo_error>^2*<cellvol>,<domain>)/cellsum(<cellvol>,<domain>))" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
NONE_OUTPUT <foo_max> [1] "cellmax(<foo>,,<domain>)" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
NONE_OUTPUT <foo_min> [1] "cellmin(<foo>,,<domain>)" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
NONE_OUTPUT <foo_error_max> [1] "cellmax(abs(<foo_error>),,<domain>)" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
CELL_OUTPUT <icell_output> [1] "<icell>" ON <allcells> # other information: region = <allcells>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
FACE_OUTPUT <jface_output> [1] "<jface>" ON <allfaces> # other information: region = <allfaces>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
FACE_OUTPUT <facenorm_output[l=1]> [1] "<facenorm[l=1]>" ON <allfaces> # other information: region = <allfaces>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
FACE_OUTPUT <facenorm_output[l=2]> [1] "<facenorm[l=2]>" ON <allfaces> # other information: region = <allfaces>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
FACE_OUTPUT <u_f_vect[l=1]> [1] "<facenorm[l=1]>*<u_f>" ON <allfaces> # other information: region = <allfaces>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
FACE_OUTPUT <u_f_vect[l=2]> [1] "<facenorm[l=2]>*<u_f>" ON <allfaces> # other information: region = <allfaces>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
CELL_OUTPUT <crosskernel_output> [1] "<crosskernel>" ON <domain> # other information: region = <domain>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
CELL_OUTPUT <centralkernel_output> [1] "<centralkernel>" ON <domain> # other information: region = <domain>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
CELL_OUTPUT <kernelsum_output> [1] "<kernelsum>" ON <domain> # other information: region = <domain>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
NONE_OUTPUT <norm_1> [1] "cellsum(abs(<local_equation>),<allcells>)/cellsum(1.d0,<allcells>)" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
NONE_OUTPUT <norm_2> [1] "(cellsum(abs(<local_equation>)^2,<allcells>)/cellsum(1.d0,<allcells>))^(1/2)" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
NONE_OUTPUT <norm_4> [1] "(cellsum(abs(<local_equation>)^4,<allcells>)/cellsum(1.d0,<allcells>))^(1/4)" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
NONE_OUTPUT <norm_8> [1] "(cellsum(abs(<local_equation>)^8,<allcells>)/cellsum(1.d0,<allcells>))^(1/8)" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
NONE_OUTPUT <norm_infty> [1] "cellmax(abs(<local_equation>),region=<allcells>)" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
CELL_OUTPUT <foo_newtonupdate> [1] "cellnewtonupdate(variable=<foo>)" ON <allcells> # other information: region = <allcells>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
#--------------------------------------------------------------------------------
# condition variables:
#--------------------------------------------------------------------------------
# local variables:
FACE_LOCAL <xc_to_xf[l=1]> [1] "<facex[l=1]>-faceave[lastcell](<cellx[l=1]>)" ON <allfaces> # other information: region = <allfaces>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/centre_to_face_vector.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/centre_to_face_vector.arb: comments = empty
FACE_LOCAL <xc_to_xf[l=2]> [1] "<facex[l=2]>-faceave[lastcell](<cellx[l=2]>)" ON <allfaces> # other information: region = <allfaces>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/centre_to_face_vector.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/centre_to_face_vector.arb: comments = empty
FACE_LOCAL <xc_to_xf[l=3]> [1] "<facex[l=3]>-faceave[lastcell](<cellx[l=3]>)" ON <allfaces> # other information: region = <allfaces>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/centre_to_face_vector.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/centre_to_face_vector.arb: comments = empty
CELL_LOCAL <foo_limiter_crosskernel> [1] "cellif(<crosskernel>-<foo_limiter_crosskernel_max>,<foo_limiter_crosskernel_max>/<crosskernel>,1.d0)" ON <allcells> # other information: region = <allcells>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/kernel_limiter.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/kernel_limiter.arb: comments = empty
CELL_LOCAL <foo_limiter_centralkernel> [1] "cellif(<centralkernel>-<foo_limiter_centralkernel_max>,<foo_limiter_centralkernel_max>/<centralkernel>,1.d0)" ON <allcells> # other information: region = <allcells>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/kernel_limiter.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/kernel_limiter.arb: comments = empty
FACE_LOCAL <foo_delta> [1] "( + (<xc_to_xf[l=1]>)*(faceave[lastcell](<foo_limiter_grad[l=1]>)) + (<xc_to_xf[l=2]>)*(faceave[lastcell](<foo_limiter_grad[l=2]>)) + (<xc_to_xf[l=3]>)*(faceave[lastcell](<foo_limiter_grad[l=3]>)) )" ON <allfaces> # other information: region = <allfaces>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/limiter.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/limiter.arb: comments = empty
CELL_LOCAL <foo_deltac> [1] "facemax(abs(<foo_delta>),default=0.d0,region=<celljfaces>)" ON <domain> # other information: region = <domain>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/limiter.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/limiter.arb: comments = empty
CELL_LOCAL <foo_diff> [1] "cellmin(<foo_upper_bound>-<foo>,-(<foo_lower_bound>-<foo>))" ON <domain> # other information: region = <domain>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/limiter.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/limiter.arb: comments = empty
CELL_LOCAL <foo_diff_bounded> [1] "cellmax(<foo_diff>,0.d0)" ON <domain> # other information: region = <domain>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/limiter.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/limiter.arb: comments = empty
CELL_LOCAL <foo_limiter_domain> [1] "cellif(1.d0-<foo_b>*<foo_betar>,<foo_betar>^2/(<foo_betar>^2+<foo_a>*(1.d0-<foo_b>*<foo_betar>)^2),1.d0)" ON <allcells> # other information: region = <allcells>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = ../../templates/advection_limiters/implicit/limiter.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/templates/advection_limiters/implicit/limiter.arb: comments = empty
CELL_LOCAL <local_equation> [1] "cellif(celldelta(<domain>),<foo_advection>,0.d0)+cellif(celldelta(<inlet_cells>),<foo_inlet>,0.d0)+cellif(celldelta(<outlet_cells>),<foo_outlet>,0.d0)" ON <allcells> # other information: region = <allcells>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = advection_2d_box_test.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_develop/examples/advection_2d_box_test/advection_2d_box_test.arb: comments = empty
#--------------------------------------------------------------------------------
