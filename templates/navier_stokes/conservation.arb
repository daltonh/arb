# conservation equations solved over each domain cell (finite volume method)

# check default strings are set
INCLUDE "default_string_replacements"

# now create equations
CELL_EQUATION <continuity> "celldiv(<<radius_f>>*<u_f>)/<<radius_c>>" ON <domain> # continuity
CELL_EQUATION <momentum[l=<<i>>]> "celldiv(<<radius_f>>*<J_f[l=<<i>>]>)/<<radius_c>>-<dynamic_force_c[l=<<i>>]>" ON <domain> # momentum component'

# add on hoop stress term separately for cylindrical coordinates
IF <<cylindrical>>
# perform a check that <<radialdim>> has been correctly defined
  IF {{ return (!( string_eval('<<radialdim>>') ge 1 && string_eval('<<radialdim>>') le 3)) }}
    ERROR 'This is a cylindrical coordinate simulation however the string <<radialdim>> has not been correctly defined'
  END_IF
  VARIABLE <momentum[l=<<radialdim>>]> "<momentum[l=<<radialdim>>]>+2.d0*<u[l=<<radialdim>>]>*<mu>/(<cellx[l=<<radialdim>>]>**2)"
END_IF

#define momentum eqn for azimuthal component
IF <<azimuthal>>
# perform a check that <<azimuthaldim>> has been correctly defined
  IF {{ return (!( string_eval('<<azimuthaldim>>') ge 1 && string_eval('<<azimuthaldim>>') le 3)) }}
    ERROR 'This is a cylindrical coordinate simulation with azimuthal flow however the string <<azimuthaldim>> has not been correctly defined'
  END_IF
  VARIABLE <momentum[l=<<azimuthaldim>>]> "celldiv((<<radius_f>>**2)*<J_f[l=<<azimuthaldim>>]>)/(<<radius_c>>**2)+<rho>*<u[l=<<radialdim>>]>*<u[l=<<azimuthaldim>>]>/<cellx[l=<<radialdim>>]>" ON <domain> # momentum component'
  VARIABLE <momentum[l=<<radialdim>>]> "<momentum[l=<<radialdim>>]>-<rho>*<u[l=<<azimuthaldim>>]>**2/<cellx[l=<<radialdim>>]>"
END_IF

# add transient term which is independent of cartesian or cylindrical coordinates
IF <<transientnavierstokes>>
  IF <<uniformdensity>>
    VARIABLE <momentum[l=<<i>>]> "<rho>*(<u[l=<<i>>]>-<u[l=<<i>>,r=1]>)/<dt>+<momentum[l=<<i>>]>"
  ELSE
    VARIABLE <momentum[l=<<i>>]> "(<rho>*<u[l=<<i>>]>-<rho[r=1]>*<u[l=<<i>>,r=1]>)/<dt>+<momentum[l=<<i>>]>"
  END_IF
END_IF
