INCLUDE "delta"

# calculate the cell centred unit normals at the current timestep, to be used in both the curvature and advection calculations
<<dim1comment>>CELL_LOCAL <vof_phigrad[l=1]> "<vof_delta[l=1]>" ON <all cells> output
<<dim2comment>>CELL_LOCAL <vof_phigrad[l=2]> "<vof_delta[l=2]>" ON <all cells>
<<dim3comment>>CELL_LOCAL <vof_phigrad[l=3]> "<vof_delta[l=3]>" ON <all cells>
<<dim1comment>>CELL_DERIVED <vof_phigrad_unit[l=1]> "<vof_delta[l=1]>/cellmax(<vof_delta_mag>,1.d-20)" ON <all cells> output
<<dim2comment>>CELL_DERIVED <vof_phigrad_unit[l=2]> "<vof_delta[l=2]>/cellmax(<vof_delta_mag>,1.d-20)" ON <all cells>
<<dim3comment>>CELL_DERIVED <vof_phigrad_unit[l=3]> "<vof_delta[l=3]>/cellmax(<vof_delta_mag>,1.d-20)" ON <all cells>

#<<dim1comment>>FACE_LOCAL <vof_phigrad_f[l=1]> "facegrad[l=1](<vof_phi_smoothed>)" ON <all faces>
#<<dim2comment>>FACE_LOCAL <vof_phigrad_f[l=2]> "facegrad[l=2](<vof_phi_smoothed>)" ON <all faces>
#<<dim3comment>>FACE_LOCAL <vof_phigrad_f[l=3]> "facegrad[l=3](<vof_phi_smoothed>)" ON <all faces>
#FACE_LOCAL <vof_phigrad_f_mag> "sqrt(dot(<vof_phigrad_f[l=:]>,<vof_phigrad_f[l=:]>))" ON <all faces>
#FACE_DERIVED <vof_phigrad_f_scalar> "facegrad(<vof_phi_smoothed>)/facemax(<vof_phigrad_f_mag>,<vof_phi_tol>/<facedx>)" ON <all faces> nooutput

#<<dim1comment>>CELL_DERIVED <vof_phigrad_unit[l=1]> "<vof_phigrad[l=1]>/<vof_phigrad_mag>" ON <all cells> output
#<<dim2comment>>CELL_DERIVED <vof_phigrad_unit[l=2]> "<vof_phigrad[l=2]>/<vof_phigrad_mag>" ON <all cells>
#<<dim3comment>>CELL_DERIVED <vof_phigrad_unit[l=3]> "<vof_phigrad[l=3]>/<vof_phigrad_mag>" ON <all cells>

CELL_LOCAL <vof_smooth_dist^2> "dot(<celltoseparationicellr[l=:]>,<celltoseparationicellr[l=:]>)"
CELL_CONSTANT <vof_smooth_eps_centre^2> "cellmin(cellmin(<celldxmin>,region=<adjacentcellicells>),2.d0*<celldxkernel>)**2" ON <all cells>
CELL_LOCAL <vof_smooth_eps^2> "cellfromcellave[separationcentre](<vof_smooth_eps_centre^2>)" ON <all cells>
NONE_CONSTANT <vof_phigrad_smoothing_constant> 0.5d0 # increased due to new exponential + sqrt smoothing function
CELL_LOCAL <vof_phigrad_smooth_kernel> "exp(-sqrt(<vof_smooth_dist^2>/<vof_smooth_eps^2>)/<vof_phigrad_smoothing_constant>)"
#CELL_CONSTANT <vof_phigrad_smooth_denominator> "cellsum[maxseparation=<<maxseparation>>,faceseparation](<vof_phigrad_smooth_kernel>*<vof_delta_mag>,region=<all cells>)" ON <all cells>

<<dim1comment>>CELL_DERIVED <vof_phigrad_smoothed[l=1]> "cellsum[maxseparation=4,faceseparation,<<reflect=1>>](<vof_delta[l=1]>*<vof_phigrad_smooth_kernel>,region=<all cells>)" ON <all cells>
<<dim2comment>>CELL_DERIVED <vof_phigrad_smoothed[l=2]> "cellsum[maxseparation=4,faceseparation,<<reflect=2>>](<vof_delta[l=2]>*<vof_phigrad_smooth_kernel>,region=<all cells>)" ON <all cells>
<<dim3comment>>CELL_DERIVED <vof_phigrad_smoothed[l=3]> "cellsum[maxseparation=4,faceseparation,<<reflect=3>>](<vof_delta[l=3]>*<vof_phigrad_smooth_kernel>,region=<all cells>)" ON <all cells>
CELL_DERIVED <vof_phigrad_smoothed_mag> "sqrt(cellmax(dot(<vof_phigrad_smoothed[l=:]>,<vof_phigrad_smoothed[l=:]>),1.d-20))" ON <all cells>
<<dim1comment>>CELL_DERIVED <vof_phigrad_smoothed_unit[l=1]> "<vof_phigrad_smoothed[l=1]>/<vof_phigrad_smoothed_mag>" ON <all cells>
<<dim2comment>>CELL_DERIVED <vof_phigrad_smoothed_unit[l=2]> "<vof_phigrad_smoothed[l=2]>/<vof_phigrad_smoothed_mag>" ON <all cells>
<<dim3comment>>CELL_DERIVED <vof_phigrad_smoothed_unit[l=3]> "<vof_phigrad_smoothed[l=3]>/<vof_phigrad_smoothed_mag>" ON <all cells>
