# Reconstructed list of the variables in arb format:
#--------------------------------------------------------------------------------
# constant variables:
NONE_CONSTANT <adv_limiter> [1] "numerical constant rather than an equation" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = # multiplier used to limit gradients when calculating advection fluxes
NONE_CONSTANT <dt> [1] "numerical constant rather than an equation" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = # constant timestep
NONE_CONSTANT <dtout> [1] "numerical constant rather than an equation" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = # time between output
NONE_CONSTANT <tend> [1] "numerical constant rather than an equation" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = # time for simulation to stop
NONE_CONSTANT <advection limiter> [1] "numerical constant rather than an equation" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = # whether to use high order (1.d0) or low order (0.d0) upwinding
CELL_CONSTANT <u initial> [1] "cellif(2.5d0-<cellx[l=1]>,cellif(<cellx[l=1]>-1.5d0,1.d0,0.d0),0.d0)" ON <allcells> # other information: region = <allcells>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = # square wave
#--------------------------------------------------------------------------------
# transient variables:
NONE_TRANSIENT <t> [1] "0.d0" "<t[r=1]>+<dt>" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = # time
NONE_TRANSIENT <t[r=1]> [1] "<t>-<dt>" "<t>" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = # time at last step
CELL_TRANSIENT <u[r=1]> [1] "<u>" "<u>" ON <allcells> # other information: region = <allcells>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = empty
#--------------------------------------------------------------------------------
# newtient variables:
#--------------------------------------------------------------------------------
# unknown variables:
CELL_UNKNOWN <u> [1] "<u initial>" ON <allcells> # other information: region = <allcells>: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = empty
#--------------------------------------------------------------------------------
# derived variables:
CELL_DERIVED <u mid> [1] "(<u>+<u[r=1]>)/2.d0" ON <allcells> # other information: region = <allcells>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = # mid-timestep velocity
FACE_DERIVED <u_f> [1] "<u mid>*<facenorm[l=1]>" ON <allfaces> # other information: region = <allfaces>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = empty
CELL_DERIVED <u limiter> [1] "celllimiter[lower](<u mid>,cellmin(<u mid>,,<adjacentcellicells>),celllimiter[upper](<u mid>,cellmax(<u mid>,,<adjacentcellicells>)))" ON <allcells> # other information: region = <allcells>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = # relative limits
FACE_DERIVED <u advection> [1] "faceave[advection](<u mid>,<u_f>,<u limiter>*<advection limiter>)" ON <allfaces> # other information: region = <allfaces>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = empty
#--------------------------------------------------------------------------------
# equation variables:
CELL_EQUATION <u equation> [1] "(<u>-<u[r=1]>)/<dt>+celldiv(<u advection>^2*<facenorm[l=1]>)/2.d0" ON <domain> # other information: region = <domain>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = empty
FACE_EQUATION <u boundaries> [1] "<u>-<u initial>" ON <boundaries> # other information: region = <boundaries>: deriv = 1: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = empty
#--------------------------------------------------------------------------------
# output variables:
NONE_OUTPUT <tout> [1] "<t>" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = # this will record the time of the last output
NONE_OUTPUT <CFL> [1] "cellmax(abs(<u>),,<domain>)*<dt>/cellmin(<cellvol>,,<domain>)" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = empty
#--------------------------------------------------------------------------------
# condition variables:
NONE_CONDITION <output test> [1] "<t>-<tout>-<dtout>" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = # this will be true (>0.) whenever we are <dtout> from last output
NONE_CONDITION <stop test> [1] "<t>-<tend>" # other information: region = empty: deriv = 0: newtstepmax = empty: newtstepmin = empty: filename = inviscid_burgers_equation.arb: absfilename = /home/daltonh/fortran/arb/testsuite/arb_rewind/examples/inviscid_burgers_equation/inviscid_burgers_equation.arb: comments = # when this becomes true (>0.) the simulation stops
#--------------------------------------------------------------------------------
# local variables:
#--------------------------------------------------------------------------------
