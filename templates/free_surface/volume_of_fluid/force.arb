# within this file we calculate the cell centred surface force and face centred force used in the <u_f> interpolation

<<dim1comment>>CELL_DERIVED <vof_F_c[l=1]> "<vof_kappa_c>*celldivgrad[l=1](<vof_phi_delta_f>)" ON <vof_delta_mask[r=1]>
<<dim2comment>>CELL_DERIVED <vof_F_c[l=2]> "<vof_kappa_c>*celldivgrad[l=2](<vof_phi_delta_f>)" ON <vof_delta_mask[r=1]>
<<dim3comment>>CELL_DERIVED <vof_F_c[l=3]> "<vof_kappa_c>*celldivgrad[l=3](<vof_phi_delta_f>)" ON <vof_delta_mask[r=1]>

IF 1
# the following copied from navier-stokes p_error
  # for evaluating the face centred dynamic force there are three options: dxunit, facegrad and adjacentcells
  # uncomment the comment string corresponding to the one you want
  # default is dxunit
  # remember to set all of these strings on entry if changing from the default, with only the requested one uncommented
  GENERAL_REPLACEMENTS D "<<dynamicforcefdxunitcomment>>" W "" D "<<dynamicforceffacegradcomment>>" W "#" D "<<dynamicforcefadjacentcellscomment>>" W "#"

  # differencing type used here must match that in the p_error calc
  # dxunit method
  <<dynamicforcefdxunitcomment>>FACE_DERIVED <vof_F_f> "<vof_kappa_f>*facegrad[dxunit](<vof_phi_delta>)" ON <vof_interface_mask_f[r=1]>
  # facegrad method
  <<dynamicforceffacegradcomment>>FACE_DERIVED <vof_F_f> "<vof_kappa_f>*facegrad(<vof_phi_delta>)" ON <vof_interface_mask_f[r=1]>
  # adjacentcells method
  <<dynamicforcefadjacentcellscomment>>FACE_DERIVED <vof_F_f> "<vof_kappa_f>*facegrad[adjacentcells](<vof_phi_delta>)" ON <vof_interface_mask_f[r=1]>
ELSE
  FACE_DERIVED <vof_F_f> "<vof_kappa_f>*facegrad[dxunit](<vof_phi_delta>)" ON <vof_interface_mask_f[r=1]>
END_IF
