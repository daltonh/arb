MARKDOWN
Turn on outputs and create variables suitable for debugging multifluid simulations
END_MARKDOWN

REPLACEMENTS D "<<diagnostics_elements>>" W "0"
IF <<diagnostics_elements>>
  INCLUDE_TEMPLATE "general/element_information"
END_IF

# set path to template directory where all following includes will be found
INCLUDE_TEMPLATE "multiphase/multifluid"

# some output variables/diagnostics
VARIABLE <u_f_vect_species0[l=1]> output
VARIABLE <u_f_vect_species1[l=1]> output
VARIABLE <phi_species0[r=1]> output
VARIABLE <phi_species1[r=1]> output

INCLUDE "slip_velocities" # output slip velocities

REPLACEMENTS D "<<diagnostics_forces>>" W "1"
IF <<diagnostics_forces>>
  INCLUDE "visualise_forces"
END_IF

REPLACEMENTS D "<<diagnostics_rhie_chow>>" W "0"
IF <<diagnostics_rhie_chow>>
  INCLUDE "u_f_vector"
  INCLUDE "u_f_vector" R '<<component>>' W '_{raw}'
  INCLUDE "u_f_vector" R '<<component>>' W '_{correction}'
  INCLUDE "dynamic_force_f_vector"

# turn some species specific outputs on
# at the same time, expand the region of the velocity correction related variables to be <allfaces> rather than <domainfaces> to enable visualisation
  {{
    my $return_string = '';
    for my $species (string_eval('<<multifluid_species_list>>','list')) {
      $return_string .= "VARIABLE <phiu_f_$species> output\n";
      $return_string .= "VARIABLE <u_f_{raw}_$species> output\n";
      $return_string .= "VARIABLE <u_f_{correction}_$species> ON <allfaces> output\n";
      $return_string .= "VARIABLE <dynamic_force_f_{correction}_$species> ON <allfaces> output\n";
      $return_string .= "VARIABLE <phi_f_bounded_$species> output\n";
      $return_string .= "VARIABLE <phi_f_bounded_adjacent_$species> output\n";
      $return_string .= "VARIABLE <phi_bounded_$species> output\n";
      $return_string .= "VARIABLE <phi_f_adv_$species> output\n";
      $return_string .= "VARIABLE <u_f_{correction}_A_$species> ON <allfaces> output\n";
      $return_string .= "VARIABLE <u_f_{correction}_D_$species> ON <allfaces> output\n";
      $return_string .= "VARIABLE <u_f_$species> output\n";
      $return_string .= "VARIABLE <u_f_alpha_{vis}_$species> ON <allfaces> output\n";
      $return_string .= "VARIABLE <u_f_alpha_{adv}_$species> ON <allfaces> output\n";
      $return_string .= "VARIABLE <dynamic_force_f_$species> ON <allfaces> output\n";
    }
    return $return_string;
  }}

  IF <<transientnavierstokes>>
    {{
      my $return_string = '';
      for my $species (string_eval('<<multifluid_species_list>>','list')) {
        $return_string .= "VARIABLE <u_f_{correction}_$species"."[r=1]> ON <allfaces> output\n";
        $return_string .= "VARIABLE <u_f_alpha_{transient}_$species> ON <allfaces> output\n";
        $return_string .= "VARIABLE <u_$species"."[l=1,r=1]> output\n";
      }
      return $return_string;
    }}
  END_IF
END_IF

# some output variables
REPLACEMENTS D "<<diagnostics_species_information>>" W "1"
IF <<diagnostics_species_information>>
  INCLUDE "species_information"
END_IF

# rate of change of unknowns
REPLACEMENTS D "<<diagnostics_unknown_changes>>" W "0"
IF <<diagnostics_unknown_changes>>
  {{
    my $return_string = '';
    for my $species (string_eval('<<multifluid_species_list>>','list')) {
      for my $l (string_eval('<<dimensions>>','list')) {
        $return_string .= "CELL_OUTPUT <dudt_$species"."[l=$l]> '(<u_$species"."[l=$l]>-<u_$species"."[l=$l,r=1]>)/<dt>' ON <allcells>\n";
      }
      $return_string .= "CELL_OUTPUT <dphidt_$species> '(<phi_$species>-<phi_$species"."[r=1]>)/<dt>' ON <allcells>\n";
    }
    return $return_string;
  }}
END_IF
####################################################
