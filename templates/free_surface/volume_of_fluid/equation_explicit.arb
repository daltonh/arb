# here we advect <vof> using the explicit <u_f[r=1]>
# actually an equation is not required

CELL_TRANSIENT <vof_phigrad[l=1,r=1]> "" "cellgrad[l=1](<vof_phi_smoothed[r=1]>)" ON <all cells>
CELL_TRANSIENT <vof_phigrad[l=2,r=1]> "" "cellgrad[l=2](<vof_phi_smoothed[r=1]>)" ON <all cells>
CELL_TRANSIENT <vof_phigrad_mag^2[r=1]> "" "dot(<vof_phigrad[l=:,r=1]>,<vof_phigrad[l=:,r=1]>)" ON <all cells>
CELL_TRANSIENT <vof_phigrad_mag[r=1]> "" "sqrt(cellmax(<vof_phigrad_mag^2[r=1]>,1.d-10))" ON <all cells>
CELL_TRANSIENT <vof_phigrad_unit[l=1,r=1]> "" "<vof_phigrad[l=1,r=1]>/<vof_phigrad_mag[r=1]>" ON <all cells> output
CELL_TRANSIENT <vof_phigrad_unit[l=2,r=1]> "" "<vof_phigrad[l=2,r=1]>/<vof_phigrad_mag[r=1]>" ON <all cells>
CELL_TRANSIENT <vof_d[r=1]> "" "cellvofd[noderivative,best](phi=<vof_phi[r=1]>,normal[l=1]=<vof_phigrad_unit[l=1,r=1]>,normal[l=2]=<vof_phigrad_unit[l=2,r=1]>,phitol=<vof_phi_tol>)" ON <all cells> output
# use built-in function facevofphi
FACE_TRANSIENT <vof_phi_f[r=1]> "" "facevofphi[linearone](phi=<vof_phi[r=1]>,d=<vof_d[r=1]>,flux=<u_f[r=1]>,normal[l=1]=<vof_phigrad_unit[l=1,r=1]>,normal[l=2]=<vof_phigrad_unit[l=2,r=1]>,phitol=<vof_phi_tol>)" ON <all faces> output
# or use more accurate (for 2D only though) templates solution
#INCLUDE "facevofphi_linearone_2D_advected_vector_explicit" R "<facevofphi_n[l=" W "<vof_phigrad_unit[r=1,l=" R "<facevofphi_d>" W "<vof_d[r=1]>" R "<facevofphi_phi>" W "<phi[r=1]>" R "<facevofphi_f[r=1]>" W "<vof_phi_f[r=1]>" R "<facevofphi_phi>" W "<vof_phi[r=1]>" R "<facevofphi_phitol>" W "<vof_phi_tol>"

CELL_TRANSIENT <vof_phi_adjust[r=1]> "" "cellvofphiadjust(phi[r=1]=<vof_phi[r=1]>,phif=<vof_phi_f[r=1]>,flux=<u_f[r=1]>,dt=<dt>)" ON <all cells> output
FACE_TRANSIENT <vof_phi_f_adjusted[r=1]> "" "facemax(facemin(<vof_phi_f[r=1]>+faceif(<u_f[r=1]>,faceave[downcell](<vof_phi_adjust[r=1]>),faceave[upcell](<vof_phi_adjust[r=1]>)),1.d0),0.d0)" ON <all faces> output

#CELL_TRANSIENT <vof_phi_advected> "<vof[r=1]>-<dt>*celldiv(<vof_phi_f_adjusted[r=1]>*<u_f[r=1]>)" ON <all cells> nooutput
# note: guarding against destabilising effects of non-zero divergence enroute to convergence
#CELL_DERIVED <vof_phi_advected> "<vof_phi[r=1]>-<dt>*celldiv((<vof_phi_f_adjusted[r=1]>-faceave[lastcell](<vof_phi>))*<u_f>)" ON <all cells> nooutput
#CELL_EQUATION <vof_equation_domain> "<vof_phi>-<vof_phi_advected>" ON <domain>

CELL_EQUATION <vof_equation_domain> "(<vof_phi>-<vof_phi[r=1]>)/<dt> + celldiv(<vof_phi_f_adjusted[r=1]>*<u_f[r=1]>)" ON <domain> nooutput
