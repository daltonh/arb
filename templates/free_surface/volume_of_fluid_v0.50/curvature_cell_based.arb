# within this file we calculate the curvature

# Method 8 - as per method 1 but more smoothing
<<dim1comment>>FACE_LOCAL <vof_n_f[l=1]> "facegrad[l=1](<vof_phi_smoothed>)"
<<dim2comment>>FACE_LOCAL <vof_n_f[l=2]> "facegrad[l=2](<vof_phi_smoothed>)"
<<dim3comment>>FACE_LOCAL <vof_n_f[l=3]> "facegrad[l=3](<vof_phi_smoothed>)"
FACE_LOCAL <vof_n_f mag> "sqrt(dot(<vof_n_f[l=:]>,<vof_n_f[l=:]>))" elementdata
FACE_DERIVED <vof_n_f_scalar> "facegrad(<vof_phi>)/facemax(<vof_n_f mag>,<vof_phi_tol>/<facedx>)" ON <all faces> nooutput
<<cylindricalcomment>>CELL_DERIVED <vof_kappa_c2> "-celldiv(<<radius_f>>*<vof_n_f_scalar>/faceave[lastcell](<<radius_c>>))" ON <all cells> nooutput,elementdata
<<cartesiancomment>>CELL_DERIVED <vof_kappa_c2> "-celldiv(<vof_n_f_scalar>)" ON <all cells> nooutput,elementdata
FACE_DERIVED <vof_kappa_f> "<vof_kappa_c2>" ON <all faces>
# cell centred curvature is interpolated from face centred values
CELL_DERIVED <vof_kappa_c> "<vof_kappa_f>" ON <all cells> output,elementdata
# cell centred curvature is taken directly from celldiv
#CELL_DERIVED <vof_kappa_c> "<vof_kappa_c2>" ON <all cells> output,elementdata

