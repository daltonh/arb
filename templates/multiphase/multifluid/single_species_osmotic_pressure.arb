MARKDOWN
Here we find the osmotic pressure for a disperse phase species <<species>>
END_MARKDOWN

# this specifies the type of osmotic pressure function
#REPLACEMENTS D "<<osmotic_pressure_method>>" W "dilute"
#REPLACEMENTS D "<<osmotic_pressure_method>>" W "carnahanstarling"
REPLACEMENTS D "<<osmotic_pressure_method>>" W "carnahanstarlinglimited" # same as carnahanstarling, but goes to infinity at <p_osmotic_phi_max_allsolids> rather than 1

IF {{ return string_test('<<osmotic_pressure_method>>','dilute')}}
# linear osmotic pressure, dilute assumption, multiplier is location independent
  NONE_CONSTANT <p_osmotic_multiplier_<<species>>> [Pa] "<k_boltzmann>*<T>/<V_<<species>>>"

ELSE
# methods that have a maximum total solids magnitude, with a multiplier that can be expressed as a function of total solid volume fraction
# create a possibly normalised and limited phi for use in the allsolids multiplier
  NONE_CONSTANT <p_osmotic_phi_max_allsolids> "<phi_max_allsolids>"
  NONE_CONSTANT <p_osmotic_phi_tol> "<phi_tol>"
  CELL_DERIVED <p_osmotic_phi_norm_allsolids> "cellmin(1.d0-<phi_pos_species0>,<p_osmotic_phi_max_allsolids>-<p_osmotic_phi_tol>)/<p_osmotic_phi_max_allsolids>" output

  IF {{ return string_test('<<osmotic_pressure_method>>','carnahanstarling') }}
# for the true carnahanstarling method the osmotic pressure approaches infinity at phi=1
    NONE_CONSTANT <p_osmotic_phi_max_allsolids> 1.d0
  END_IF

  IF {{ return (string_test('<<osmotic_pressure_method>>','carnahanstarling') || string_test('<<osmotic_pressure_method>>','carnahanstarlinglimited')) }}
    CELL_DERIVED <p_osmotic_multiplier_allsolids> [Pa] "(1.d0+<p_osmotic_phi_norm_allsolids>+<p_osmotic_phi_norm_allsolids>^2-<p_osmotic_phi_norm_allsolids>^3)/((1.d0-<p_osmotic_phi_norm_allsolids>)^3)" ON <allcells>

  ELSE
    ERROR "in single_species_osmotic_pressure: osmotic_pressure_method = <<osmotic_pressure_method>> not coded yet or unknown"
  END_IF

  CELL_LOCAL <p_osmotic_multiplier_<<species>>> [Pa] "<k_boltzmann>*<T>*<p_osmotic_multiplier_allsolids>/<V_<<species>>>" ON <allcells>

END_IF

CELL_LOCAL <p_osmotic_<<species>>> "<p_osmotic_multiplier_<<species>>>*<phi_<<species>>>" ON <allcells> # note that phi here isn't limited so that negative osmotic pressures could be generated at boundaries where phi goes negative
