MARKDOWN
Here we create a better estimate of the correction velocity, using ingredients however from the navier_stokes u_f file, done with replacements

In this version we applied a correction to all velocity components based on a mixture equation, and then corrections to each phase based on algebraic slip equations.
END_MARKDOWN

# use this to debug
# produces a correction velocity sum equation
REPLACEMENTS D '<<debug>>' W '0'

# cancel the previous correction velocities so that they can be calculated in the correct order
{{
  my $return_string='';
  for my $species (string_eval('<<multifluid_species_list>>','list')) {
    $return_string .= "VARIABLE <u_f_{correction}_$species> CANCEL\n";
    $return_string .= "VARIABLE <u_f_$species> CANCEL\n";
  }
  return $return_string;
}}

# find total pressure and DeltaA based on total pressure
CELL_LOCAL <p_total> "<p_species0>" ON <allcells>
{{
  my $return_string='';
  for my $species (string_eval('<<multifluid_disperse_species_list>>','list')) {
    $return_string .= "VARIABLE <p_total> '<p_total>+<p_$species>'\n";
  }
  return $return_string;
}}

# TODO: wrap both of these in a template, called with <<species>> = total and then <<species>> = $species
FACE_DERIVED <p_f_total> "<p_total>" ON <allfaces>
CELL_LOCAL <celldivgrad_p_total[l=<<i>>]> "celldivgrad[l=<<i>>](<p_f_total>)" ON <allcells>
FACE_DERIVED <u_f_DeltaA_total> "-facegrad[adjacentcells](<p_total>)+faceave[adjacentcells](dot(<celldivgrad_p_total[l=:]>,cellave[lastface](<facedxunit[l=:]>)))" ON <allfaces>

# now find DeltaA (slip) for each disperse species
{{
  my $return_string='';
  for my $species (string_eval('<<multifluid_disperse_species_list>>','list')) {
    $return_string .= "FACE_DERIVED <p_f_$species> '<p_$species>' ON <allfaces>\n";
    $return_string .= "CELL_LOCAL <celldivgrad_p_$species"."[l=<<i>>]> 'celldivgrad[l=<<i>>](<p_$species>)' ON <allcells>\n";
    $return_string .= "FACE_DERIVED <u_f_DeltaA_$species> '-facegrad[adjacentcells](<p_$species>)+faceave[adjacentcells](dot(<celldivgrad_p_$species"."[l=:]>,cellave[lastface](<facedxunit[l=:]>)))' ON <allfaces>\n";
  }
  return $return_string;
}}

# calculate alpha and alpha_{transient} mixture coefficients
FACE_DERIVED <u_f_alpha_mixture> '0.d0' ON <allfaces>
FACE_DERIVED <u_f_alpha_{transient}_mixture> '0.d0' ON <allfaces>
{{
  my $return_string='';
  for my $species (string_eval('<<multifluid_disperse_species_list>>','list')) {
    $return_string .= "VARIABLE <u_f_alpha_mixture> '<u_f_alpha_mixture>+<phi_f_bounded_$species>*<u_rf_{vis}_$species>'\n";
    if (string_eval('<<transientnavierstokes>>')) {
      $return_string .= "VARIABLE <u_f_alpha_mixture> '<u_f_alpha_mixture>+<phi_f_bounded_$species>*<u_rf_{transient}_$species>'\n";
      $return_string .= "VARIABLE <u_f_alpha_{transient}_mixture> '<u_f_alpha_{transient}_mixture>+<phi_f_bounded_$species>*<u_rf_{transient}_$species>'\n";
    }
    if (string_test('<<navierstokescomment>>','')) {
      $return_string .= "VARIABLE <u_f_alpha_mixture> '<u_f_alpha_mixture>+<phi_f_bounded_$species>*<u_rf_{adv}_$species>'\n";
    }
  }
  return $return_string;
}}

# calculate mixture correction velocity
FACE_DERIVED <u_f_{correction}_mixture> "(<C_{Rhie-Chow}>*<u_f_DeltaA_total>+<u_f_alpha_{transient}_mixture>*<u_f_{correction}_mixture[r=1]>)/<u_f_alpha_mixture>" ON <allfaces>

# calculate the slip correction velocities (slip relative to fluid velocities) for the disperse phases
{{
  my $return_string='';
  for my $species (string_eval('<<multifluid_disperse_species_list>>','list')) {
    $return_string .= "FACE_DERIVED <u_f_phidbeta^_$species> 'faceave[adjacentcells](<phi_bounded_species0>/<beta^_$species"."_species0>)' ON <allfaces>\n";
    $return_string .= "FACE_DERIVED <phiu_f_slip_{correction}_$species> '<u_f_DeltaA_$species>*<u_f_phidbeta^_$species>' ON <allfaces>\n";
    $return_string .= "FACE_DERIVED <u_f_slip_{correction}_$species> '<phiu_f_slip_{correction}_$species>/<phi_f_bounded_harmonic_$species>' ON <allfaces>\n";
  }
  return $return_string;
}}

# calculate the fluid and disperse phase correction velocities
FACE_DERIVED <u_f_{correction}_species0> "<u_f_{correction}_mixture>" ON <allfaces>
{{
  my $return_string='';
  for my $species (string_eval('<<multifluid_disperse_species_list>>','list')) {
    $return_string .= "VARIABLE <u_f_{correction}_species0> '(<u_f_{correction}_species0>)-<phiu_f_slip_{correction}_$species>'\n";
    $return_string .= "FACE_DERIVED <u_f_{correction}_$species> '(<u_f_{correction}_species0>)+<u_f_slip_{correction}_$species>' ON <allfaces>\n";
  }
  return $return_string;
}}

# redefine final velocity for all species
{{
  my $return_string='';
  for my $species (string_eval('<<multifluid_species_list>>','list')) {
    $return_string .= "FACE_DERIVED <u_f_$species> '<u_f_{raw}_$species>+faceif(facedelta(<domainfaces>),<u_f_{correction}_$species>,0.d0)' ON <allfaces>\n";
  }
  return $return_string;
}}


IF <<debug>>
  FACE_OUTPUT <u_f_{correction}_equation_<<species>>> "<u_rf_{transient}_<<species>>>*(<u_f_{correction}_<<species>>>-<u_f_{correction}_<<species>>[r=1]>)" ON <domainfaces>
  <<navierstokescomment>>VARIABLE <u_f_{correction}_equation_<<species>>> "<u_f_{correction}_equation_<<species>>>+<u_rf_{adv}_<<species>>>*<u_f_{correction}_<<species>>>"
  VARIABLE <u_f_{correction}_equation_<<species>>> "<u_f_{correction}_equation_<<species>>>+<u_rf_{vis}_<<species>>>*<u_f_{correction}_<<species>>>"
  {{
    my $return_string='';
    for my $j (string_eval('<<multifluid_species_list>>','list')) {
      if (string_test('<<species>>',$j)) { next; }
      $return_string .= "VARIABLE <u_f_{correction}_equation_<<species>>> '<u_f_{correction}_equation_<<species>>>+<beta^_f_<<species>>_$j>*(<u_f_{correction}_<<species>>>-<u_f_{correction}_$j>)'\n";
    }
    return $return_string;
  }}
  VARIABLE <u_f_{correction}_equation_<<species>>> "<u_f_{correction}_equation_<<species>>>+<C_{Rhie-Chow}>*<p_error_<<species>>>"
END_IF

